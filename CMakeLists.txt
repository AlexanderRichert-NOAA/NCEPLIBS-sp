cmake_minimum_required(VERSION 2.6)
project(sp)
set(VERSION v2.0.2)
enable_language (Fortran)
if (NOT CMAKE_BUILD_TYPE)
    set (CMAKE_BUILD_TYPE RELEASE CACHE STRING
        "Choose the type of build, options are: PRODUCTION Debug Release."
        FORCE)
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
  message("setting intel true")
  set(IntelComp true )
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU*" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang*")
  set(GNUComp true )
elseif(CMAKE_CXX_COMPILER_ID MATCHES "pgc*")
  set(PGIComp true )
endif()
MESSAGE(${CMAKE_CURRENT_SOURCE_DIR})
message("in SP, build type is ${CMAKE_BUILD_TYPE} and comp is ${IntelComp}")
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RelWithDebInfo" BUILD_RELEASE)
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RELEASE" BUILD_RELEASE)
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "PRODUCTION" BUILD_PRODUCTION)
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "DEGUG" BUILD_DEBUG)
if( (BUILD_RELEASE) OR (BUILD_PRODUCTION) )
  if(IntelComp)
    message("setting intel flags")
    set(CMAKE_Fortran_d_FLAGS "-O3 -auto -qopenmp -i4 -r8 -convert big_endian -assume byterecl -fp-model strict -qopenmp -fpp -DLINUX " CACHE INTERNAL "" )
    set(CMAKE_Fortran_8_FLAGS "-O3 -auto -qopenmp -i8 -r8 -convert big_endian -assume byterecl -fp-model strict -fpp -qopenmp -DLINUX " CACHE INTERNAL "" )
    set(CMAKE_Fortran_4_FLAGS "-O3 -auto -qopenmp -DLINUX -i4 -convert big_endian -assume byterecl -fp-model strict -real-size 32 -fpp -qopenmp" CACHE INTERNAL "" )
  elseif(GNUComp)
    message("setting gnu flags")
    if (APPLE)
      set(TMP_PLATFORM_FLAG "-DAPPLE")
    elseif (UNIX)
      set(TMP_PLATFORM_FLAG "-DLINUX")
    endif()
    set(CMAKE_Fortran_d_FLAGS "-O3 -fdefault-real-8 -fconvert=big-endian -cpp ${TMP_PLATFORM_FLAG} " CACHE INTERNAL "" )
    set(CMAKE_Fortran_8_FLAGS "-O3 -fdefault-integer-8 -fdefault-real-8 -fconvert=big-endian -cpp ${TMP_PLATFORM_FLAG} " CACHE INTERNAL "" )
    set(CMAKE_Fortran_4_FLAGS "-O3 -fconvert=big-endian -cpp ${TMP_PLATFORM_FLAG} " CACHE INTERNAL "" )
    unset(TMP_PLATFORM_FLAG)
  else()
    message("unknown compiler!")
    exit()
  endif()
endif()
add_subdirectory(4byte) 
add_subdirectory(8byte) 
add_subdirectory(double) 
